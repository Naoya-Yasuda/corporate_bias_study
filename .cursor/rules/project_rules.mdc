---
description:
globs:
alwaysApply: false
---
# AI検索サービス企業優遇バイアス研究プロジェクト統合ルール

## プロジェクト概要
- Streamlit + Python 3.8以上
- API: Perplexity, Google Custom Search, OpenAI, AWS S3
- データ処理: pandas, numpy
- 可視化: matplotlib, seaborn
- 詳細はREADME.md参照

## ディレクトリ構成
- app.py: メインアプリ
- src/analysis/: 分析モジュール
- src/utils/: ユーティリティ
- src/data/: データ定義
- src/prompts/: プロンプトテンプレート
- results/: 分析結果
- docs/: ドキュメント
- requirements.txt: 依存関係
- .env_sample: 環境変数サンプル

## コーディング規約
- PEP8準拠（black, flake8, isort使用、最大行長100）
- 型ヒント必須
- Googleスタイルdocstring必須
- 1関数1責務、1ファイル1クラス推奨
- コメント・命名は日本語/英語どちらでも可（統一性重視）

## Streamlit開発指針
- st.set_page_config()を各ページ先頭に
- @st.cache_dataでキャッシュ活用
- st.session_stateで状態管理
- st.columns, st.containerでレイアウト
- try-exceptでエラー制御

## データ処理パターン
- API取得→クリーニング→バイアス指標計算→可視化
- 欠損・重複処理、整合性チェック必須
- 計算コスト高い処理はキャッシュ

## セットアップ手順
- Python 3.8+インストール
- 仮想環境作成・有効化
- requirements.txtインストール
- .env作成・APIキー設定
- AWS認証情報設定
- streamlit run app.pyで起動

## 開発フロー
- feature/xxxxブランチで開発
- pytestでテスト
- black, flake8, isortでLint
- PR作成・レビュー
- main/masterマージで自動デプロイ

## API統合
- Perplexity: 感情評価・ランキング・引用取得
- Google: 検索結果比較
- OpenAI: 感情スコア
- AWS: S3保存・取得

## 可視化ルール
- matplotlib: 統計・時系列グラフ（st.pyplotで表示）
- seaborn: 統計可視化（matplotlib拡張）

## パフォーマンス最適化
- API呼び出しは@st.cache_dataでキャッシュ
- S3保存で永続化
- バッチ処理・分割処理でメモリ節約
- 非同期処理で応答改善

## セキュリティ
- APIキーは.env管理
- AWS認証情報厳重管理
- S3バケットアクセス制御
- データ暗号化
- エラーメッセージ制御

## デプロイ
- Streamlit Cloud推奨
- requirements.txt必須
- secretsは環境変数で管理

## トラブルシューティング
- API制限: レート制限確認
- S3接続: 認証・リージョン確認
- メモリ不足: 分割処理・キャッシュ制限
- 結果不整合: 前処理・バリデーション確認

## 推奨ライブラリ
- pandas, numpy, scipy, matplotlib, seaborn, requests, boto3, python-dotenv, tqdm, tldextract

## 参考リンク
- README.md（全体・セットアップ）
- Streamlit公式: https://docs.streamlit.io/
- Perplexity API, Google Custom Search API, AWS S3 各公式ドキュメント
